/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.kgk.debezium.engine.demo.dto;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class StudentV2 extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5507225329326411401L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"StudentV2\",\"namespace\":\"com.kgk.debezium.engine.demo.dto\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"full_name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"address_id\",\"type\":\"int\"},{\"name\":\"department_id\",\"type\":\"int\"},{\"name\":\"department\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"is_active\",\"type\":\"boolean\",\"default\":false},{\"name\":\"created_date\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"}]},{\"name\":\"modified_date\",\"type\":[\"null\",{\"type\":\"int\",\"logicalType\":\"date\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
  }

  private static final BinaryMessageEncoder<StudentV2> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<StudentV2> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<StudentV2> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<StudentV2> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<StudentV2> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this StudentV2 to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a StudentV2 from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a StudentV2 instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static StudentV2 fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private int id;
  private java.lang.String name;
  private java.lang.String full_name;
  private int address_id;
  private int department_id;
  private java.lang.String department;
  private boolean is_active;
  private java.time.LocalDate created_date;
  private java.time.LocalDate modified_date;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public StudentV2() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param name The new value for name
   * @param full_name The new value for full_name
   * @param address_id The new value for address_id
   * @param department_id The new value for department_id
   * @param department The new value for department
   * @param is_active The new value for is_active
   * @param created_date The new value for created_date
   * @param modified_date The new value for modified_date
   */
  public StudentV2(java.lang.Integer id, java.lang.String name, java.lang.String full_name, java.lang.Integer address_id, java.lang.Integer department_id, java.lang.String department, java.lang.Boolean is_active, java.time.LocalDate created_date, java.time.LocalDate modified_date) {
    this.id = id;
    this.name = name;
    this.full_name = full_name;
    this.address_id = address_id;
    this.department_id = department_id;
    this.department = department;
    this.is_active = is_active;
    this.created_date = created_date;
    this.modified_date = modified_date;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return full_name;
    case 3: return address_id;
    case 4: return department_id;
    case 5: return department;
    case 6: return is_active;
    case 7: return created_date;
    case 8: return modified_date;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: full_name = value$ != null ? value$.toString() : null; break;
    case 3: address_id = (java.lang.Integer)value$; break;
    case 4: department_id = (java.lang.Integer)value$; break;
    case 5: department = value$ != null ? value$.toString() : null; break;
    case 6: is_active = (java.lang.Boolean)value$; break;
    case 7: created_date = (java.time.LocalDate)value$; break;
    case 8: modified_date = (java.time.LocalDate)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public int getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(int value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'full_name' field.
   * @return The value of the 'full_name' field.
   */
  public java.lang.String getFullName() {
    return full_name;
  }


  /**
   * Sets the value of the 'full_name' field.
   * @param value the value to set.
   */
  public void setFullName(java.lang.String value) {
    this.full_name = value;
  }

  /**
   * Gets the value of the 'address_id' field.
   * @return The value of the 'address_id' field.
   */
  public int getAddressId() {
    return address_id;
  }


  /**
   * Sets the value of the 'address_id' field.
   * @param value the value to set.
   */
  public void setAddressId(int value) {
    this.address_id = value;
  }

  /**
   * Gets the value of the 'department_id' field.
   * @return The value of the 'department_id' field.
   */
  public int getDepartmentId() {
    return department_id;
  }


  /**
   * Sets the value of the 'department_id' field.
   * @param value the value to set.
   */
  public void setDepartmentId(int value) {
    this.department_id = value;
  }

  /**
   * Gets the value of the 'department' field.
   * @return The value of the 'department' field.
   */
  public java.lang.String getDepartment() {
    return department;
  }


  /**
   * Sets the value of the 'department' field.
   * @param value the value to set.
   */
  public void setDepartment(java.lang.String value) {
    this.department = value;
  }

  /**
   * Gets the value of the 'is_active' field.
   * @return The value of the 'is_active' field.
   */
  public boolean getIsActive() {
    return is_active;
  }


  /**
   * Sets the value of the 'is_active' field.
   * @param value the value to set.
   */
  public void setIsActive(boolean value) {
    this.is_active = value;
  }

  /**
   * Gets the value of the 'created_date' field.
   * @return The value of the 'created_date' field.
   */
  public java.time.LocalDate getCreatedDate() {
    return created_date;
  }


  /**
   * Sets the value of the 'created_date' field.
   * @param value the value to set.
   */
  public void setCreatedDate(java.time.LocalDate value) {
    this.created_date = value;
  }

  /**
   * Gets the value of the 'modified_date' field.
   * @return The value of the 'modified_date' field.
   */
  public java.time.LocalDate getModifiedDate() {
    return modified_date;
  }


  /**
   * Sets the value of the 'modified_date' field.
   * @param value the value to set.
   */
  public void setModifiedDate(java.time.LocalDate value) {
    this.modified_date = value;
  }

  /**
   * Creates a new StudentV2 RecordBuilder.
   * @return A new StudentV2 RecordBuilder
   */
  public static com.kgk.debezium.engine.demo.dto.StudentV2.Builder newBuilder() {
    return new com.kgk.debezium.engine.demo.dto.StudentV2.Builder();
  }

  /**
   * Creates a new StudentV2 RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new StudentV2 RecordBuilder
   */
  public static com.kgk.debezium.engine.demo.dto.StudentV2.Builder newBuilder(com.kgk.debezium.engine.demo.dto.StudentV2.Builder other) {
    if (other == null) {
      return new com.kgk.debezium.engine.demo.dto.StudentV2.Builder();
    } else {
      return new com.kgk.debezium.engine.demo.dto.StudentV2.Builder(other);
    }
  }

  /**
   * Creates a new StudentV2 RecordBuilder by copying an existing StudentV2 instance.
   * @param other The existing instance to copy.
   * @return A new StudentV2 RecordBuilder
   */
  public static com.kgk.debezium.engine.demo.dto.StudentV2.Builder newBuilder(com.kgk.debezium.engine.demo.dto.StudentV2 other) {
    if (other == null) {
      return new com.kgk.debezium.engine.demo.dto.StudentV2.Builder();
    } else {
      return new com.kgk.debezium.engine.demo.dto.StudentV2.Builder(other);
    }
  }

  /**
   * RecordBuilder for StudentV2 instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<StudentV2>
    implements org.apache.avro.data.RecordBuilder<StudentV2> {

    private int id;
    private java.lang.String name;
    private java.lang.String full_name;
    private int address_id;
    private int department_id;
    private java.lang.String department;
    private boolean is_active;
    private java.time.LocalDate created_date;
    private java.time.LocalDate modified_date;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.kgk.debezium.engine.demo.dto.StudentV2.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.full_name)) {
        this.full_name = data().deepCopy(fields()[2].schema(), other.full_name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.address_id)) {
        this.address_id = data().deepCopy(fields()[3].schema(), other.address_id);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.department_id)) {
        this.department_id = data().deepCopy(fields()[4].schema(), other.department_id);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.department)) {
        this.department = data().deepCopy(fields()[5].schema(), other.department);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.is_active)) {
        this.is_active = data().deepCopy(fields()[6].schema(), other.is_active);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.created_date)) {
        this.created_date = data().deepCopy(fields()[7].schema(), other.created_date);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.modified_date)) {
        this.modified_date = data().deepCopy(fields()[8].schema(), other.modified_date);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing StudentV2 instance
     * @param other The existing instance to copy.
     */
    private Builder(com.kgk.debezium.engine.demo.dto.StudentV2 other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.full_name)) {
        this.full_name = data().deepCopy(fields()[2].schema(), other.full_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.address_id)) {
        this.address_id = data().deepCopy(fields()[3].schema(), other.address_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.department_id)) {
        this.department_id = data().deepCopy(fields()[4].schema(), other.department_id);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.department)) {
        this.department = data().deepCopy(fields()[5].schema(), other.department);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.is_active)) {
        this.is_active = data().deepCopy(fields()[6].schema(), other.is_active);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.created_date)) {
        this.created_date = data().deepCopy(fields()[7].schema(), other.created_date);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.modified_date)) {
        this.modified_date = data().deepCopy(fields()[8].schema(), other.modified_date);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public int getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'full_name' field.
      * @return The value.
      */
    public java.lang.String getFullName() {
      return full_name;
    }


    /**
      * Sets the value of the 'full_name' field.
      * @param value The value of 'full_name'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setFullName(java.lang.String value) {
      validate(fields()[2], value);
      this.full_name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'full_name' field has been set.
      * @return True if the 'full_name' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'full_name' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearFullName() {
      full_name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'address_id' field.
      * @return The value.
      */
    public int getAddressId() {
      return address_id;
    }


    /**
      * Sets the value of the 'address_id' field.
      * @param value The value of 'address_id'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setAddressId(int value) {
      validate(fields()[3], value);
      this.address_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'address_id' field has been set.
      * @return True if the 'address_id' field has been set, false otherwise.
      */
    public boolean hasAddressId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'address_id' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearAddressId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'department_id' field.
      * @return The value.
      */
    public int getDepartmentId() {
      return department_id;
    }


    /**
      * Sets the value of the 'department_id' field.
      * @param value The value of 'department_id'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setDepartmentId(int value) {
      validate(fields()[4], value);
      this.department_id = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'department_id' field has been set.
      * @return True if the 'department_id' field has been set, false otherwise.
      */
    public boolean hasDepartmentId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'department_id' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearDepartmentId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'department' field.
      * @return The value.
      */
    public java.lang.String getDepartment() {
      return department;
    }


    /**
      * Sets the value of the 'department' field.
      * @param value The value of 'department'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setDepartment(java.lang.String value) {
      validate(fields()[5], value);
      this.department = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'department' field has been set.
      * @return True if the 'department' field has been set, false otherwise.
      */
    public boolean hasDepartment() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'department' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearDepartment() {
      department = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'is_active' field.
      * @return The value.
      */
    public boolean getIsActive() {
      return is_active;
    }


    /**
      * Sets the value of the 'is_active' field.
      * @param value The value of 'is_active'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setIsActive(boolean value) {
      validate(fields()[6], value);
      this.is_active = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'is_active' field has been set.
      * @return True if the 'is_active' field has been set, false otherwise.
      */
    public boolean hasIsActive() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'is_active' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearIsActive() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'created_date' field.
      * @return The value.
      */
    public java.time.LocalDate getCreatedDate() {
      return created_date;
    }


    /**
      * Sets the value of the 'created_date' field.
      * @param value The value of 'created_date'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setCreatedDate(java.time.LocalDate value) {
      validate(fields()[7], value);
      this.created_date = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'created_date' field has been set.
      * @return True if the 'created_date' field has been set, false otherwise.
      */
    public boolean hasCreatedDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'created_date' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearCreatedDate() {
      created_date = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'modified_date' field.
      * @return The value.
      */
    public java.time.LocalDate getModifiedDate() {
      return modified_date;
    }


    /**
      * Sets the value of the 'modified_date' field.
      * @param value The value of 'modified_date'.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder setModifiedDate(java.time.LocalDate value) {
      validate(fields()[8], value);
      this.modified_date = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'modified_date' field has been set.
      * @return True if the 'modified_date' field has been set, false otherwise.
      */
    public boolean hasModifiedDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'modified_date' field.
      * @return This builder.
      */
    public com.kgk.debezium.engine.demo.dto.StudentV2.Builder clearModifiedDate() {
      modified_date = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public StudentV2 build() {
      try {
        StudentV2 record = new StudentV2();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.full_name = fieldSetFlags()[2] ? this.full_name : (java.lang.String) defaultValue(fields()[2]);
        record.address_id = fieldSetFlags()[3] ? this.address_id : (java.lang.Integer) defaultValue(fields()[3]);
        record.department_id = fieldSetFlags()[4] ? this.department_id : (java.lang.Integer) defaultValue(fields()[4]);
        record.department = fieldSetFlags()[5] ? this.department : (java.lang.String) defaultValue(fields()[5]);
        record.is_active = fieldSetFlags()[6] ? this.is_active : (java.lang.Boolean) defaultValue(fields()[6]);
        record.created_date = fieldSetFlags()[7] ? this.created_date : (java.time.LocalDate) defaultValue(fields()[7]);
        record.modified_date = fieldSetFlags()[8] ? this.modified_date : (java.time.LocalDate) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<StudentV2>
    WRITER$ = (org.apache.avro.io.DatumWriter<StudentV2>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<StudentV2>
    READER$ = (org.apache.avro.io.DatumReader<StudentV2>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










